<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:JustinsASS.Gui.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="./Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="RemoveButtonStyle" TargetType="Button">
        <Setter Property="ToolTip" Value="Remove"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,-15,-15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image Name="Default" Source="../Media/RemoveButton.png" Width="30" Height="30"/>
                        <Image Name="Hover" Source="../Media/RemoveButton_Hover.png" Width="30" Height="30" Visibility="Hidden"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Default" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ResistanceIconStyle" TargetType="Image">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
    </Style>

    <Style x:Key="PinButtonStyle" TargetType="Button">
        <Setter Property="ToolTip" Value="Pin"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,-15,-15,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image Name="Default" Source="../Media/PinButton.png" Width="30" Height="30"/>
                        <Image Name="Hover" Source="../Media/PinButton_Hover.png" Width="30" Height="30" Visibility="Hidden"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Default" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Hover" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="styleSolutionText" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Width" Value="150"/>
        <Setter Property="Margin" Value="25,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style x:Key="styleSolutionRow" TargetType="Border">
        <Style.Resources>
            <SolidColorBrush x:Key="brushSolutionItem" Color="{StaticResource colorSolutionItemBG}" />
            <SolidColorBrush x:Key="brushSolutionItemBorder" Color="{StaticResource colorSolutionItemBorder}" />
            <Style TargetType="StackPanel">
                <!--<Style.Resources>
                    <Style TargetType="Image">
                        <Setter Property="Margin" Value="50"/>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                    </Style>
                </Style.Resources>-->
                <Setter Property="Orientation" Value="Horizontal" />
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource brushSolutionItem}" />
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="8" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource brushSolutionItemBorder}"/>
    </Style>

    <Style x:Key="styleTextBlock" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="styleSolutionStack" TargetType="StackPanel">
        <Style.Resources>
            <Style TargetType="TextBlock" BasedOn="{StaticResource styleTextBlock}"/>
            <Style TargetType="Border" BasedOn="{StaticResource styleSolutionRow}"/>
        </Style.Resources>
    </Style>

    <Style x:Key="styleListItem" TargetType="ListViewItem">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="Padding" Value="15" />
                <Setter Property="CornerRadius" Value="15" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border CornerRadius="20" 
                            BorderBrush="{StaticResource brushListItemBorder}"
                            BorderThickness="2"
                            Background="{StaticResource brushListItem}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="styleList" TargetType="ListView">
        <Style.Resources>
            <SolidColorBrush x:Key="brushText" Color="{StaticResource colorText}" />
            <Style TargetType="ListViewItem" BasedOn="{StaticResource styleListItem}"/>
        </Style.Resources>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource brushText}" />
        <Setter Property="Background" Value="{StaticResource brushContainerBG}" />
    </Style>

    <Style x:Key="styleTabControl" TargetType="TabControl">
        <Setter Property="Background" Value="{StaticResource brushContainerBG}" />
        <Setter Property="Foreground" Value="{StaticResource brushText}" />
        <Style.Resources>
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="{StaticResource brushText}" />
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource brushText}" />
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="Foreground" Value="{StaticResource brushText}" />
            </Style>
            <Style TargetType="StackPanel">
                <Setter Property="Background" Value="{StaticResource brushContainerBG}" />
            </Style>
            <Style TargetType="Grid">
                <Setter Property="Background" Value="{StaticResource brushContainerBG}" />
            </Style>
            <Style TargetType="ListView">
                <Setter Property="Background" Value="{StaticResource brushContainerBG}" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="BorderBrush" Value="{StaticResource brushButtonFG}" />
                <Setter Property="Background" Value="{StaticResource brushButtonBG}" />
            </Style>
            <Style TargetType="TabItem">
                <Setter Property="Background" Value="{StaticResource brushTabBG}" />
                <Setter Property="Foreground" Value="{StaticResource brushTabText}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource brushContainerBG}" />
                        <Setter Property="Foreground" Value="{StaticResource brushText}" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter Property="Background" Value="{StaticResource brushTabBG}" />
                        <Setter Property="Foreground" Value="{StaticResource brushTabText}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Grid" x:Key="styleUpDownControl">
        <Style.Resources>
            <Style TargetType="ProgressBar">
                <Setter Property="Background" Value="{StaticResource brushUDCBG}" />
            </Style>
            <Style TargetType="Border">
                <Setter Property="Background" Value="{StaticResource brushPBValBG}" />
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource brushText}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Name="styleSelector" TargetType="Grid">
        <Style.Resources>
            <Style TargetType="ListViewItem">
                <Setter Property="Padding" Value="15"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border CornerRadius="20" 
                            BorderBrush="{StaticResource brushListItemBorder}"
                            BorderThickness="2"
                            Background="{StaticResource brushListItem}">
                                <ContentPresenter/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>